CREATE OR REPLACE PACKAGE PKG_VARIAVEIS IS
    V_EMPLOYEES      EMPLOYEES%ROWTYPE;
    V_DEPARTMENTS    DEPARTMENTS%ROWTYPE;
    V_LOCATIONS      LOCATIONS%ROWTYPE;
    V_COUNTRIES      COUNTRIES%ROWTYPE;
    V_EMPLOYEE_ID    EMPLOYEES.EMPLOYEE_ID%TYPE; 
    V_DEPARTMENT_ID  DEPARTMENTS.DEPARTMENT_ID%TYPE;
    V_LOCATION_ID    LOCATIONS.LOCATION_ID%TYPE;
    V_COUNTRY_ID     COUNTRIES.COUNTRY_ID%TYPE;
    V_CODIGO_CHAVE   NUMBER;
   
END;



  BEGIN
    PKG_VARIAVEIS.V_EMPLOYEES.EMAIL      := '&EMAIL';
    PKG_VARIAVEIS.V_EMPLOYEES.SALARY     := &SALARY;
    PKG_VARIAVEIS.V_EMPLOYEES.FIRST_NAME := '&FIRST_NAME';
    IF INSTR(PKG_VARIAVEIS.V_EMPLOYEES.EMAIL,'@') = 0 THEN
      RAISE PKG_EXCEPTIONS.EXC_EMAIL_INVALIDO;
    ELSIF LENGTH(PKG_VARIAVEIS.V_EMPLOYEES.FIRST_NAME) <=2 THEN
      RAISE PKG_EXCEPTIONS.EXC_CADASTRO_INVALIDO;
    END IF;
    DBMS_OUTPUT.PUT_LINE('DADOS EMPREGADO OK');
  EXCEPTION
    WHEN PKG_EXCEPTIONS.EXC_EMAIL_INVALIDO THEN
       RAISE_APPLICATION_ERROR(-20000,'EMAIL INVALIDO');

    WHEN PKG_EXCEPTIONS.EXC_CADASTRO_INVALIDO THEN
       RAISE_APPLICATION_ERROR(-20001,'NOME INVALIDO');
  END;
  
  CREATE OR REPLACE PROCEDURE PRC_B IS
  BEGIN
     DBMS_OUTPUT.PUT_LINE(PKG_VARIAVEIS.V_EMPLOYEES.FIRST_NAME);
  END;

  CREATE OR REPLACE PROCEDURE PRC_A 
  (P_EMPLOYEE_ID   EMPLOYEES.EMPLOYEE_ID%TYPE) IS
  BEGIN
    IF PKG_VARIAVEIS.V_CODIGO_CHAVE IS NULL THEN
       RETURN;
    END IF;
    IF PKG_VARIAVEIS.V_CODIGO_CHAVE <> 98760099 THEN
       RAISE_APPLICATION_ERROR(-20000,'CHAMADA INVALIDA');
    END IF;
    OPEN PKG_CURSOR_EMPLOYEES.C_EMPLOYEE_ID(P_EMPLOYEE_ID);
    LOOP 
      FETCH PKG_CURSOR_EMPLOYEES.C_EMPLOYEE_ID
       INTO PKG_VARIAVEIS.V_EMPLOYEES;
      EXIT WHEN PKG_CURSOR_EMPLOYEES.C_EMPLOYEE_ID%NOTFOUND;
      PRC_B;
    END LOOP;
    CLOSE PKG_CURSOR_EMPLOYEES.C_EMPLOYEE_ID;
  END;

  CREATE OR REPLACE PROCEDURE PRC_CHAMA_A  
  (P_EMPLOYEE_ID   EMPLOYEES.EMPLOYEE_ID%TYPE) IS
  BEGIN
    PKG_VARIAVEIS.V_CODIGO_CHAVE := 98760099;
    PRC_A(P_EMPLOYEE_ID);
  END;
 







 
