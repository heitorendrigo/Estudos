CREATE OR REPLACE PROCEDURE PRC_UPD_ROW_NOME_TABELA
(P_NOME_PK     NOME_TABELA.NOME_PK%TYPE,
 P_NOME_TABELA NOME_TABELA%ROWTYPE,
 P_COMMIT      BOOLEAN DEFAULT FALSE) IS
E_ERRO_FK       EXCEPTION;
PRAGMA EXCEPTION_INIT(E_ERRO_FK ,-2292);
BEGIN
    UPDATE NOME_TABELA
      SET ROW = P_NOME_TABELA
     WHERE NOME_PK = P_NOME_PK;
    IF P_COMMIT AND SQL%ROWCOUNT > 0 THEN
       COMMIT;
    END IF;
EXCEPTION
    WHEN  E_ERRO_FK THEN
      DBMS_OUTPUT.PUT_LINE('Erro de valor em coluna relacionada');
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Erro de update na tabela NOME_TABELA');
END;

--CRIACAO BLOCO ANONIMO PARA CHAMADA DA PROCEDURE
SET SERVEROUTPUT ON;
DECLARE 
   V_NOME_TABELA  NOME_TABELA%ROWTYPE;
BEGIN
   SELECT *
     INTO V_NOME_TABELA
     FROM NOME_TABELA
    WHERE NOME_PK = '&VALOR_NOME_PK';
   --INDICA AS COLUNAS A SEREM ALTERADAS NA VARIAVEL
   V_NOME_TABELA.NOME_COLUNA1 := '&VALOR_NOME_COLUNA1';
   --V_NOME_TABELA.NOME_COLUNA2 := '&VALOR_NOME_COLUNA2';
   --V_NOME_TABELA.NOME_COLUNA3 := '&VALOR_NOME_COLUNA3';

   PRC_UPD_ROW_NOME_TABELA(V_NOME_TABELA.NOME_PK,V_NOME_TABELA); --SE NAO QUISER SALVAR
   PRC_UPD_ROW_NOME_TABELA(V_NOME_TABELA.NOME_PK,V_NOME_TABELA,TRUE); --SE QUISER SALVAR
   --COMMIT; --SALVA 
EXCEPTION
   WHEN OTHERS THEN
     DBMS_OUTPUT.PUT_LINE('Erro na execução da rotina PRC_UPD_ROW_NOME_TABELA');
END;  
